version: '3.7'
volumes:
  db_orders:
services:
  orders:
    container_name: orders
    image: orders:1.0.0
    depends_on:
      orders_db:
        condition: service_healthy
      kafka:
        condition: service_healthy  
    build:
      context: .
      target: development
    command:
      - sh
      - -c
      - |
        npm install
        ${START_COMMAND}
    networks:
      - default
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - .:/opt/orders/app
      - ./package.json:/opt/orders/package.json
      - ./package-lock.json:/opt/orders/package-lock.json
    restart: unless-stopped
    extra_hosts:
      - 'orders.dev:172.17.0.1'
  orders_db:
    container_name: orders_db
    image: postgres:11.13
    restart: unless-stopped
    networks:
      - default
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_orders:/var/lib/postgresql/data
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: "nc -z zookeeper 2181 || exit -1"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - default
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://orders.dev:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - 'orders.dev:172.17.0.1'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - default    
  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    extra_hosts:
      - "orders.dev:172.17.0.1"
    networks:
      - default   
  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:master
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - default   
networks:
  default:
      name: dev-network
      external: true
